<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/tx   
	         http://www.springframework.org/schema/tx/spring-tx.xsd
	         http://www.springframework.org/schema/context
	         http://www.springframework.org/schema/context/spring-context.xsd
	         http://www.springframework.org/schema/cache
	         http://www.springframework.org/schema/cache/spring-cache.xsd
	         http://www.springframework.org/schema/task 
	         http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="com.shishuo.cms">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <tx:annotation-driven/>

    <task:annotation-driven/>

    <cache:annotation-driven key-generator="keyGeneratorService"/>

    <!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean
                        class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                        p:name="default"/>
                <bean
                        class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                        p:name="config"/>
                <bean
                        class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                        p:name="article"/>
                <bean
                        class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                        p:name="media"/>
                <bean
                        class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                        p:name="menu"/>
            </set>
        </property>
    </bean>

    <!-- 在XML配置文件中加入外部属性文件，当然也可以指定外部文件的编码 -->
    <bean id="propertyConfigurer" class="com.shishuo.cms.util.PropertyUtils">
        <property name="locations">
            <list>
                <value>classpath:shishuocms.properties</value> <!-- 指定外部文件的编码 -->
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--创建数据映射器，数据映射器必须为接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.shishuo.cms.dao"/>
    </bean>

    <!-- shiro配置-->

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- 如果没有认证将要跳转的登陆地址，http可访问的url，如果不在表单认证过虑器FormAuthenticationFilter中指定此地址就为身份认证地址 -->
        <property name="loginUrl" value="/admin/login.htm" />
        <!--<property name="successUrl" value="/manage/index.htm" />-->
        <!-- 没有权限跳转的地址 -->
        <property name="unauthorizedUrl" value="/refuse.htm" />
        <!-- shiro拦截器配置 -->
        <property name="filters">
            <map>
                <entry key="authc" value-ref="adminFormAuthenticationFilter" />
                <entry key="logout" value-ref="logoutFilter" />
                <entry key="userLogout" value-ref="userLogout" />
                <entry key="userAuthc" value-ref="userFormAuthenticationFilter" />
                <entry key="user" value-ref="userFilter" />
                <entry key="admin" value-ref="adminFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /admin/login.json = authc
                /admin/logout.htm = logout,roles[admin]
                /user/login.json = userAuthc
                /user/logout.htm = userLogout,roles[user]
                /manage/** = admin,roles[admin]
                /article/download.htm = user,roles[user]

                /** = anon

            </value>
        </property>
    </bean>


    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customizedRealm" />
    </bean>

    <!-- 自定义 realm -->
    <bean id="customizedRealm" class="com.shishuo.cms.shiro.CustomizedRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
    </bean>

    <bean id="userFilter" class="org.apache.shiro.web.filter.authc.UserFilter">
        <property name="loginUrl" value="/user/login.htm"/>
    </bean>

    <bean id="adminFilter" class="org.apache.shiro.web.filter.authc.UserFilter">
        <property name="loginUrl" value="/admin/login.htm"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 -->
    <bean id="adminFormAuthenticationFilter"
          class="com.shishuo.cms.shiro.AdminFormAuthenticationFilter">
        <!-- 表单中账号的input名称 -->
        <property name="usernameParam" value="name" />
        <!-- 表单中密码的input名称 -->
        <property name="passwordParam" value="password" />
        <!-- loginurl：用户登陆地址，此地址是可以http访问的url地址 -->
        <property name="loginUrl" value="/admin/login.json" />
        <property name="successUrl" value="/manage/index.htm" />
    </bean>

    <bean id="userFormAuthenticationFilter"
          class="com.shishuo.cms.shiro.UserFormAuthenticationFilter">
        <!-- 表单中账号的input名称 -->
        <property name="usernameParam" value="name" />
        <!-- 表单中密码的input名称 -->
        <property name="passwordParam" value="password" />
        <!-- loginurl：用户登陆地址，此地址是可以http访问的url地址 -->
        <property name="loginUrl" value="/user/login.json" />
        <property name="successUrl" value="/index.htm" />
    </bean>

    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5" />
        <property name="hashIterations" value="1" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/admin/login.htm" />
    </bean>

    <bean id="userLogout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/user/login.htm" />
    </bean>

</beans>
